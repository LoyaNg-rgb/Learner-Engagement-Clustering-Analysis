name: Python Application CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    
    - name: Check code structure
      run: |
        echo "Checking required directories..."
        mkdir -p src outputs/visualizations attached_assets
        echo "✓ Directory structure verified"
    
    - name: Verify imports
      run: |
        python -c "
        import sys
        sys.path.insert(0, 'src')
        try:
            from data_preprocessing import DataPreprocessor
            from clustering_analysis import ClusteringAnalysis
            from cluster_profiling import ClusterProfiler
            from visualization import ClusterVisualizer
            from intervention_recommendations import InterventionRecommender
            print('✓ All modules import successfully')
        except ImportError as e:
            print(f'✗ Import error: {e}')
            sys.exit(1)
        "
    
    # Uncomment when tests are added
    # - name: Run tests with pytest
    #   run: |
    #     pytest tests/ --cov=src --cov-report=xml --cov-report=html
    
    # - name: Upload coverage reports
    #   uses: codecov/codecov-action@v3
    #   with:
    #     file: ./coverage.xml
    #     flags: unittests
    #     name: codecov-umbrella

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        pip install black isort pylint
    
    - name: Check code formatting with Black
      run: |
        black --check --diff src/
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff src/
    
    - name: Lint with pylint
      run: |
        pylint src/ --exit-zero --max-line-length=100
